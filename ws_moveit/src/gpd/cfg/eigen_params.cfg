# Path to config file for robot hand geometry
hand_geometry_filename = /home/ws_moveit/src/gpd/cfg/hand_geometry.cfg

# Path to config file for volume and image geometry
image_geometry_filename = /home/ws_moveit/src/cfg/image_geometry_15channels.cfg

# Path to directory that contains neural network parameters
weights_file = /home/ws_moveit/src/gpd/models/lenet/15channels/params/

# Preprocessing of point cloud
#   voxelize: if the cloud gets voxelized/downsampled
#   remove_outliers: if statistical outliers are removed from the cloud (used to remove noise)
#   workspace: workspace of the robot (dimensions of a cube centered at origin of point cloud)
#   camera_position: position of the camera from which the cloud was taken
#   sample_above_plane: only draws samples which do not belong to the table plane
voxelize = 1
voxel_size = 0.005
remove_outliers = 0
workspace = -1.0 1.0 -1.0 1.0 -1.0 1.0
camera_position = 0 0 0
sample_above_plane = 0

#voxelize: 是否对点云进行体素化/降采样，体素化是一种将点云分割成网格单元并用每个单元的代表点替换其中的点的方法，可以减少点的数量和噪声
#voxel_size: 体素化的网格单元的大小，单位是米，体素大小越小，点云的分辨率越高，但是计算量也越大
#remove_outliers: 是否从点云中移除异常点，异常点是一些与周围点距离过大或过小的点，可能是由于传感器误差或环境干扰造成的
#workspace: 机器人的工作空间，即机器人能够到达的点云区域，用一个以点云原点为中心的立方体来表示，单位是米
#camera_position: 相机的位置，即拍摄点云的视角，用一个三维坐标来表示，单位是米
#sample_above_plane: 是否只在平面之上抽取样本，平面是指点云中最大的平面（通常是桌面），这个参数可以用于排除桌面上不可抓取的物体

# Grasp candidate generation
#   num_samples: number of samples to be drawn from the point cloud
#   num_threads: number of CPU threads to be used
#   nn_radius: neighborhood search radius for the local reference frame estimation
#   num_orientations: number of robot hand orientations to evaluate
#   num_finger_placements: number of finger placements to evaluate
#   hand_axes: axes about which the point neighborhood gets rotated (0: approach, 1: binormal, 2: axis)
#              (see https://raw.githubusercontent.com/atenpas/gpd2/master/readme/hand_frame.png)
#   deepen_hand: if the hand is pushed forward onto the object
#   friction_coeff: angle of friction cone in degrees
#   min_viable: minimum number of points required on each side to be antipodal
num_samples = 80
num_threads = 5
nn_radius = 0.01
num_orientations = 8
num_finger_placements = 10
hand_axes = 2
deepen_hand = 1
friction_coeff = 20
min_viable = 6

#num_samples: 从点云中抽取的样本数，样本是一些局部点的集合，用于计算抓取姿态和评分
#num_threads: 用于并行处理的线程数，线程是一种执行单元，可以同时运行多个任务
#nn_radius: 用于局部参考系估计的邻域搜索半径，局部参考系是一种描述点云局部几何特征的方法
#num_orientations: 评估的机器手方向数，机器手方向是机器手相对于点云的旋转角度
#num_finger_placements: 评估的手指放置数，手指放置是机器手指相对于抓取矩形的位置
#hand_axes: 用于旋转点邻域的轴（0: 接近轴，1: 副法线轴，2: 法线轴），点邻域是一些靠近样本点的点
#deepen_hand: 是否将机器手向物体内部推进，以增加抓取稳定性
#friction_coeff: 摩擦锥的角度（以度为单位），摩擦锥是一种描述抓取接触点之间摩擦力的模型
#min_viable: 每个侧面所需的最小点数，以判断是否为对角抓取，对角抓取是一种能够阻止物体滑动或旋转的抓取
# Filtering of candidates
#   min_aperture: the minimum gripper width
#   max_aperture: the maximum gripper width
#   workspace_grasps: dimensions of a cube centered at origin of point cloud; should be smaller than <workspace>
min_aperture = 0.0
max_aperture = 0.085
workspace_grasps = -1 1 -1 1 -1 1
#ji xie shou zhua qv can shu

# Filtering of candidates based on their approach direction
#   filter_approach_direction: turn filtering on/off
#   direction: direction to compare against
#   angle_thresh: angle in radians above which grasps are filtered
filter_approach_direction = 0
direction = 1 0 0
thresh_rad = 2.0
#filter_approach_direction: 是否根据抓取的接近方向进行过滤，接近方向是指机器手从哪个方向靠近物体
#direction: 用于过滤的方向，用一个三维向量来表示，单位是弧度
#thresh_rad: 用于过滤的角度阈值，单位是弧度，只有当抓取的接近方向与给定的方向之间的夹角小于阈值时，才保留该抓取
#这些参数可以用于排除一些不符合预期的抓取姿态，例如从侧面或下面抓取物体。你可以参考这些网页12 来了解更多关于抓取检测算法和参数设置的信息。

# Clustering of grasps
#   min_inliers: minimum number of inliers per cluster; set to 0 to turn off clustering
min_inliers = 0

# Grasp selection
#   num_selected: number of selected grasps (sorted by score)
num_selected = 80

# Visualization
#   plot_normals: plot the surface normals
#   plot_samples: plot the samples
#   plot_candidates: plot the grasp candidates
#   plot_filtered_candidates: plot the grasp candidates which remain after filtering
#   plot_valid_grasps: plot the candidates that are identified as valid grasps
#   plot_clustered_grasps: plot the grasps that after clustering
#   plot_selected_grasps: plot the selected grasps (final output)
plot_normals = 0
plot_samples = 0
plot_candidates = 0
plot_filtered_candidates = 0
plot_valid_grasps = 0
plot_clustered_grasps = 0
plot_selected_grasps = 0
