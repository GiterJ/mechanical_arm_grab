import time
import sys
sys.path.append('/home/ws_moveit/src/Diana7/bin')
import DianaApi as D

class Actuator(object):
    def __init__(self, debug=False):
        self.ip_addr = '192.168.10.75'
        self.debug = debug
        def errorCallback(e):
            print("error code" + str(e))
        def robotStateCallback(stateInfo):
            for i in range(0,7):
                print(stateInfo.contents.jointPos(i))
            for i in range(0,7):
                print(stateInfo.contents. jointAngularVel(i))
        self.fnError = D.FNCERRORCALLBACK(errorCallback)
        self.fnState = D.FNCSTATECALLBACK(robotStateCallback)
        self.netInfo=('192.168.10.75', 0, 0, 0, 0, 0)
        D.initSrv(self.netInfo, None , None)

    def zero(self, vel=0.2, acc=0.1):
        joints = (0.0,0.0,0.0,0.0,0.0,0.0,0.0)
        print("Returning to zero....")
        D.moveJToTarget(joints, vel, acc, self.ip_addr)
        D.wait_move()
        print("Return to zero successfully!")

    def run_path_between_points(self, points, vel=0.1, acc=0.5):
        counter = 0
        print("Running path between points....")
        for point in points:
            if self.debug:
                print("Move from point {} to {}".format(counter, counter+1))
            D.moveJToTarget(point, vel, acc, self.ip_addr)
            D.wait_move()
            counter = counter + 1
        print("Arrive the destination")

    def run_complex_path(self, points, vel=0.05, acc=0.05):
        ret = D.createComplexPath(D.complex_path_type.NORMAL_JOINT_PATH, self.ip_addr)
        if ret[0]==0:
            for point in points:
                D.addMoveJSegmentByTarget(ret[1],point, vel, acc, 0.1, self.ip_addr)
            print("Running complex path....")
            D.runComplexPath(ret[1], self.ip_addr)
            D.wait_move()
            print("Run complex path successfully!")
        D.destroyComplexPath(ret[1])


    def close_actuator(self):
        D.destroySrv(self.ip_addr)



if __name__ == "__main__":
    actuator = Actuator(debug=True)
    D.releaseBrake(actuator.ip_addr)

    # actuator.zero()
    # actuator.close_actuator()
    
    try:
        actuator.zero(vel=0.2, acc=0.1)
        poses =[(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0),
        (-1.9702243692549672e-05, -8.914087232218342e-06, 2.170273662822798e-05, 4.870858678832237e-05, -2.4638174878024774e-05, -6.880689075692465e-06, -5.303256225890434e-05),
        (-0.018226928128303548, -0.008246595151622852, 0.020077622979549133, 0.045061259239104264, -0.022793253891390492, -0.006365459041767648, -0.04906145289017802),
        (-0.0469825325424472, -0.021256786790850697, 0.05175296508394413, 0.11615188602830748, -0.058752894901560486, -0.016407887520720612, -0.12646296132660872),
        (-0.11600551556975622, -0.052485559581130575, 0.12778428645587475, 0.28679295674280253, -0.1450679538850635, -0.04051304491796176, -0.3122522400408525),
        (-0.177273484304835, -0.08020565209281959, 0.1952731780741799, 0.43826180562346573, -0.22168516315687087, -0.061909889345621416, -0.47716733383031473),
        (-0.2921619743276372, -0.13218582440326435, 0.32182702034152233, 0.7222932121262234, -0.365356247162618, -0.10203283120739662, -0.7864128743404927),
        (-0.37785712011078426, -0.17095775397682378, 0.41622333419650354, 0.9341517958922324, -0.47252028497225146, -0.13196047105548886, -1.017078641394687),
        (-0.4910044610014275, -0.22215016041194155, 0.5408592374902251, 1.2138786716553134, -0.6140140161101586, -0.17147534482107415, -1.321637527877325),
        (-0.5592956370378407, -0.2530478342951229, 0.6160844468967398, 1.3827105431291238, -0.6994139311689385, -0.19532493049530003, -1.5054570004917256),
        (-0.6411902325765787, -0.29010024212599356, 0.7062943166957099, 1.585173271564545, -0.8018252807560686, -0.22392528980842383, -1.7258928201044041),
        (-0.6828715893085311, -0.30895856383106596, 0.7522078441891725, 1.6882194024273491, -0.8539489156242901, -0.23848182765259007, -1.83808659764654),
        (-0.7189997235158495, -0.3253043843826161, 0.7920042954871128, 1.7775366592838753, -0.8991280994018849, -0.25109899259302015, -1.9353327568427223),
        (-0.7309968033204851, -0.33073234566353593, 0.8052195143916632, 1.8071962661788754, -0.914130763812335, -0.25528877814435724, -1.9676253165934159),
        (-0.7322659026845211, -0.3313065372436374, 0.8066174734100636, 1.810333778712005, -0.9157178060069523, -0.2557319905148038, -1.9710413534715618),
        (-0.7322659026845211, -0.3313065372436374, 0.8066174734100636, 1.810333778712005, -0.9157178060069523, -0.2557319905148038, -1.9710413534715618),
        (-0.7543302931137104, -0.3109075936212704, 0.8335987784025278, 1.7891570701378106, -0.9358366785935072, -0.2636434163400611, -1.9592486432897436),
        (-0.7932538980379528, -0.2726610026490847, 0.8841425767727983, 1.750564529382372, -0.9754675558019883, -0.28065985159587364, -1.937230412938878),
        (-0.8704936721949312, -0.16066481978652492, 1.0181374927820641, 1.6534804262324283, -1.1054891250226804, -0.34915015427932466, -1.8775885718546683),
        (-0.8790060951026221, -0.08320925321072895, 1.0812363216535144, 1.6012789085949533, -1.1985504115579104, -0.4074843708038207, -1.8458906283388956),
        (-0.8239819466116886, 0.04535634959494744, 1.1280800091880239, 1.5252045777271277, -1.3395912932144032, -0.509302769297994, -1.8180785190659932),
        (-0.7827951916557229, 0.09979125574290254, 1.130772285432435, 1.4913516672067852, -1.391412496726331, -0.5507671995388856, -1.8165994862642147),
        (-0.7513940920697751, 0.1366504961096731, 1.128781745790514, 1.4668860383665567, -1.4239553958471836, -0.5777075911192039, -1.8186262862327087),
        (-0.7513940920697751, 0.1366504961096731, 1.128781745790514, 1.4668860383665567, -1.4239553958471836, -0.5777075911192039, -1.8186262862327087),
        (-0.7513931223633779, 0.1366518810824928, 1.1287827704876972, 1.4668818979684632, -1.423952107054837, -0.577709934268506, -1.8186319210029793),
        (-0.7474074470994843, 0.14234437926981217, 1.1329944682009134, 1.4498640848338855, -1.4104345533492748, -0.5873407176063058, -1.8417918842131744),
        (-0.7202281795765798, 0.17350213538979914, 1.1506201248465469, 1.3688886745719802, -1.3644430304247028, -0.6380256936932726, -1.938797429161081),
        (-0.6819262967042866, 0.20729614321235992, 1.1622759455514857, 1.2904899869832334, -1.3422589300149708, -0.6907714078522553, -2.0164623179508636),
        (-0.6476639785920233, 0.23271071253580877, 1.167081620069425, 1.2329347375211, -1.335398028444989, -0.7295348244747568, -2.066465478347385),
        (-0.6420757092523656, 0.23664666817565572, 1.1676335417324033, 1.2240180999475883, -1.3347301470248094, -0.7354975195799399, -2.0739129235448965)]

        
        # actuator.run_path_between_points(poses)
        # actuator.zero()
        # # D.releaseBrake(actuator.ip_addr)
        actuator.run_complex_path(poses, vel=0.03, acc=0.1)
    
    finally:
        actuator.close_actuator()
